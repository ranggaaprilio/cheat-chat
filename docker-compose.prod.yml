# Production configuration
services:
  redis:
    image: redis:7-alpine
    container_name: websocket-redis-prod
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - chat-network

  server:
    image: ghcr.io/ranggaaprilio/cheat-chat-server:${IMAGE_TAG:-latest}
    container_name: chat-server-prod
    ports:
      - "3001:3001"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CLIENT_URL=https://chitchat.aprilio.dev
      - NODE_ENV=production
      - PORT=3001
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - chat-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  client:
    image: ghcr.io/ranggaaprilio/cheat-chat-client:${IMAGE_TAG:-latest}
    container_name: chat-client-prod
    ports:
      - "3000:3000"
    depends_on:
      - server
    restart: unless-stopped
    networks:
      - chat-network

networks:
  chat-network:
    external: true

volumes:
  redis_data:
