# Client Dockerfile - Multi-stage build for optimization
FROM node:20-alpine as builder

WORKDIR /app

# Copy workspace package files first for better caching
COPY package.json package-lock.json ./
COPY client/package.json ./client/

# Clear npm cache and install dependencies with optimizations
RUN npm cache clean --force && \
    npm ci --ignore-engines --only=production --no-audit --no-fund || \
    npm install --ignore-engines --only=production --no-audit --no-fund

# Install dev dependencies needed for build
RUN npm ci --ignore-engines || npm install --ignore-engines

# Copy client source code
COPY client/ ./client/

# Set build environment variable for Vite
# This will be overridden by docker-compose build args
ARG VITE_SERVER_URL=http://localhost:3001
ENV VITE_SERVER_URL=${VITE_SERVER_URL}
ENV NODE_ENV=production

# Build the client with memory optimization
# Environment variables are automatically available during build
RUN NODE_OPTIONS="--max-old-space-size=1024" npm run build:client

# Production stage - serve static files
FROM node:20-alpine as production

# Install wget for health checks and serve for static files
RUN apk add --no-cache wget && \
    npm install -g serve@14

# Copy built files from builder stage
COPY --from=builder /app/client/dist /app/dist

WORKDIR /app

# Expose port 3000
EXPOSE 3000

# Start serving static files
CMD ["serve", "-s", "dist", "-l", "3000"]